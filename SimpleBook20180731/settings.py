"""
Django settings for SimpleBook20180731 project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import djcelery
from celery.schedules import crontab, timedelta
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, os.path.join(BASE_DIR,'myapps'))
sys.path.insert(1, os.path.join(BASE_DIR, 'extapps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v)f2q^s3zngyg_85g)8+u4ig3!bm66q#5=knrq)l9d7+8@l3fl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'art',
    'xadmin',
    'crispy_forms',
    'DjangoUeditor',
    'user',
    'djcelery',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SimpleBook20180731.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SimpleBook20180731.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/' #网络访问静态资源的路径
#配置静态文件存储的位置
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
#配置媒体文件存储位置(上传文件的存储目录）
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/uploads')
#配置访问媒体文件的URL
MEDIA_URL = '/static/uploads/'

CACHES = {
    'default':{
        'BACKEND':'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1/3',
        'OPTIONS':{
            'CLIENT_CLASS':'django_redis.client.DefaultClient'
        }
    }
}

#配置Session
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
#使用缓存
REDIS_CACHE = {
    'host':'127.0.0.1',
    'db':3,
    'port':6379,
}


#配置celery


djcelery.setup_loader()
BROKER_URL = 'redis://127.0.0.1:6379/5'
CELERY_IMPORTS = ('art.tasks',)#初始导入celery位置
CELERY_TIMEZONE = 'Asia/Shanghai' #时区
#配置任务定时队列存储的位置
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

#配置定时任务
CELERYBEAT_SCHEDULE = {
    u'定时发邮件':{
        'task': 'art.tasks.sendEmailLog',
        'schedule': timedelta(seconds=10),
        'args':(),
    }
}


# --配置日志--
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters':{
        'simple':{
                'format':'[%(asctime)s]->%(module)s/%(funcName)s:%(message)s',
                'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers':{
        'console':{
            'level':'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'logFile':{
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'formatter':'simple',
            'filename': 'mart.log',
        }

    },
    'loggers':{ #日志记录器
        'info':{
            'handlers':('console','logFile'),
            'level':'INFO',
            'propagate':False

        }
    }
}

#设置Django_REST_Framework
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES':[
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}



